Servlet
  - A servelet is a Java class that is utilized to extend the capabilities of request-response programming model servers that host 
    applications. Servlets can interact or respond to any type of request, Servlets are maily used for extending applications hosted 
    by web servers.
Java Servlets
  - handles client requests by generating a response message
  - Java Servlets is hosted in a "servlet container" which is part of a web server that communicates with the servlet so that it will
    let Java to dynamically generate a web page from the server side. Servlet container also controls the servlet lifecycle
  - Pavni Diwanji created the Servlet1 while working at Sun Microsystems, with version 1.0 finalized in June 1997. As of now, 
    Servlet has 10 versions, from Servlet 1.0 to Servlet 4.0.
    Servlet 4.0 	Sep 2017 	       Java EE 8 	
    Servlet 3.1 	May 2013 	       Java EE 7 	
    Servlet 3.0 	December 2009 	 Java EE 6, Java SE 6 	
    Servlet 2.5 	September 2005 	 Java EE 5, Java SE 5 	
    Servlet 2.4 	November 2003 	 J2EE 1.4, J2SE 1.3 	
    Servlet 2.3 	August 2001 	 	 J2EE 1.3, J2SE 1.2 	
    Servlet 2.2 	August 1999 	 	 J2EE 1.2, J2SE 1.2 	
    Servlet 2.1 	November 1998  	 Unspecified 	
    Servlet 2.0 		 	             JDK 1.1 	
    Servlet 1.0 	June 1997 			
*Servlet lifecycle
1. initialization
  - The init() method will be called upon the creation of servlet and it is only called once.
2. request handling
  - Request handling is handled by the method service() which is basically the main method that handles the tasks of each request
    it uses multi-threading to do the tasks.
   - The service() method is called multiple times depending on the number of requests of the user.
3. destruction
- The destruction is handled by the method destroy() which is invoked the website? is done using the object method. 

HTTP Servlet
- used to handle HTTP requests and generate HTTP responses
- the service() method call is connected to a doXXX call (e.g. doGet(), doPost(), doPut(), doDelete())
- the doXXX() methods passes 2 arguements which are HTTPServletRequest and HTTPServletResponse

HTTPServletRequest
- used to access information from the request message
  (Needs to be put in a table)
  Method Summary
  https://tomcat.apache.org/tomcat-5.5-doc/servletapi/javax/servlet/ServletRequest.html

HTTPServletResponse 
- used to access information from the response message
(Needs to be put in a table)
 Method Summary
 https://tomcat.apache.org/tomcat-5.5-doc/servletapi/javax/servlet/ServletResponse.html
 
 HttpServletResponse Methods
1. addCookie (Cookie cookie)
Parameters
cookie - the cookie that will be returned to the client
Returns
2. containsHeader(headerName)
Parameters
headerName - name of the header
Returns
true if the headerName has been set else false
3. encodeURL(url)
Parameters
url - the url that needs to be encoded
Returns
the url that needs to be encoded else the unchange url
4. encodeRedirectURL(url)
Parameters
url - the url that needs to be encoded
Returns
the url that needs to be encoded else the unchange url
5. encodeRedirectUrl(url)
Parameters
url - the url that needs to be encoded
Returns
the url that needs to be encoded else the unchange url
6. sendError(statusCode,message)
Parameters
statusCode - status code of the error
message - the message that will be passed allong with the statusCode
Throws
IOException - if exceptions for input or output occurs 
IllegalStateException - if the response has been committed
7. sendError(statusCode)
Parameters
statusCode - status code of the error
Throws
IOException - if exceptions for input or output occurs 
IllegalStateException - if before calling this method, the response has been committed
8. sendRedirect(location)
Parameters
location - the url that will be used for redirection
Throws
IOException - if exceptions for input or output occurs 
IllegalStateException - if the given url is cannot be transformed into a valid url or the response has been committed
9. setDateHeader(headerName,date)
Parameters
headerName - the header name to be set
date - the date value to be assigned
Returns
10. addDateHeader(headerName,date)
Parameters
headerName - the header name to be set
date - the date value to be added
Returns
11. setHeader(headerName,value)
Parameters
headerName - the header name
value - the value of the header, it should be encoded if it contains octed string
Returns
12. addHeader(headerName,value)
Parameters
headerName - the header name 
value - the value of the header to be added, it should be encoded if it contains octed string
Returns
13. setIntHeader(headerName,value)
Parameters
headerName - the header name 
value - the integer value to be assigned
Returns
14. addIntHeader(headerName,value)
Parameters
headerName - the header name 
value - the integer value to be assigned
Returns
15. setStatus(statusCode)
Parameters
statusCode - status code with ranges of 2XX,3XX,4XX,and 5XX
Returns
16. setStatus(statusCode, message)
Parameters
statusCode - status code 
message - message passed with the statusCode
Returns
17. getStatus()
Parameters
Returns
the response current status code
18. getHeader(headerName)
Parameters
headerName - the response header name that will return its values
Returns
the value of the response header name else null if there is no header name ,on the response, that has been set
19. getHeaders(headerName)
Parameters
headerName - the response header name that will return its values
Returns
collection of values of the resonse header. it can be null or empty collection
20. getHeaderNames()
Parameters
Returns
collection of values of the resonse header. it can be null or empty collection


* The web container also facilitates the conversion from HTTP response to HTTPServletResponse or from HTTP request to HTTPServletRequest.

HTTPSessionHandling
- Cookie-Based
  - Non-Persistent Cookie
  - "The shit"-Sir Montes

HTTPSessionObject
- getsession
- getattribute
- 

PHP

Java

JS


References:
Program Creek.(n.d).What is Servlet Container? Retrieved from https://www.programcreek.com/2013/04/what-is-servlet-container/

https://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html

https://tomcat.apache.org/tomcat-5.5-doc/servletapi/javax/servlet/ServletRequest.html

https://tomcat.apache.org/tomcat-5.5-doc/servletapi/javax/servlet/ServletResponse.html

https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html

https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletResponse.html
